import { useState } from "react";
import { ImageUpload } from "@/components/ImageUpload";
import { ImagePreview } from "@/components/ImagePreview";
import { ResultsDisplay } from "@/components/ResultsDisplay";

const Index = () => {
  const [selectedImage, setSelectedImage] = useState<string | null>(null);
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [results, setResults] = useState<{
    name: string;
    description: string;
    confidence: number;
  } | null>(null);

  const handleImageSelect = (file: File) => {
    const imageUrl = URL.createObjectURL(file);
    setSelectedImage(imageUrl);
    analyzeImage(file);
  };

  const analyzeImage = async (file: File) => {
    setIsAnalyzing(true);
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 2000));
    setResults({
      name: "Sample Object",
      description: "This is a placeholder description. In a real application, this would be generated by an AI model based on the uploaded image.",
      confidence: 95,
    });
    setIsAnalyzing(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-white to-gray-50">
      <div className="container max-w-4xl py-12">
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            SearchIt.in
          </h1>
          <p className="text-xl text-gray-600">
            Upload an image and let AI identify it for you
          </p>
        </div>

        <div className="space-y-8">
          {!selectedImage ? (
            <ImageUpload onImageSelect={handleImageSelect} />
          ) : (
            <>
              <ImagePreview
                imageUrl={selectedImage}
                onRemove={() => {
                  setSelectedImage(null);
                  setResults(null);
                }}
              />
              <ResultsDisplay isLoading={isAnalyzing} results={results} />
            </>
          )}
        </div>
      </div>
    </div>
  );
};

export default Index;